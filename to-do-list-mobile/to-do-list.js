// –í—ñ—Ç–∞–Ω–Ω—è
const greetings = document.querySelector("#greetings");
const now = new Date();
const hour = now.getHours();

function greetingsNow(hour) {
    if (hour >= 5 && hour < 12) {
        return "–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É ‚òÄÔ∏è";
    } else if (hour >= 12 && hour < 16) {
        return "–î–æ–±—Ä–æ–≥–æ –¥–Ω—è üå§Ô∏è";
    } else if (hour >= 16 && hour < 22) {
        return "–î–æ–±—Ä–æ–≥–æ –≤–µ—á–æ—Ä–∞ üåá";
    } else {
        return "–î–æ–±—Ä–∞–Ω—ñ—á üåô";
    }
}

greetings.textContent = greetingsNow(hour);

// –ü–æ–∫–∞–∑ –¥–Ω—ñ–≤ —Ç–∏–∂–Ω—è (30 –¥–Ω—ñ–≤)
const weekdaysList = document.querySelector('.weekdays-list');
const dayLetters = ['–ù', '–ü', '–í', '–°', '–ß', '–ü', '–°'];

function formatDate(date) {
    const year = date.getFullYear();
    const month = (date.getMonth() + 1).toString().padStart(2, "0");
    const day = date.getDate().toString().padStart(2, "0");
    return `${year}-${month}-${day}`;
}

const today = new Date();
for (let i = 0; i < 30; i++) {
    const date = new Date(today);
    date.setDate(today.getDate() + i);

    const dayOfWeek = date.getDay();
    const letter = dayLetters[dayOfWeek];

    const li = document.createElement('li');
    li.textContent = letter;
    li.dataset.date = formatDate(date);

    weekdaysList.appendChild(li);
}

// –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
let selectedDay = null;
let tasksByDay = {};

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É localStorage
function saveTasks() {
    localStorage.setItem("tasksByDay", JSON.stringify(tasksByDay));
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å –∑ localStorage
function loadTasks() {
    const savedTasks = localStorage.getItem("tasksByDay");
    if (savedTasks) {
        tasksByDay = JSON.parse(savedTasks);
    }
}

// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
loadTasks();

// –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ–∫—É –Ω–∞ –¥–Ω—ñ —Ç–∏–∂–Ω—è
const allDays = weekdaysList.querySelectorAll('li');
weekdaysList.addEventListener("click", function (event) {
    if (event.target.tagName === "LI") {
        allDays.forEach(day => {
            day.style.backgroundColor = "#53424c";
            day.style.color = "white";
        });
        event.target.style.backgroundColor = "hsl(324, 87%, 80%)";
        event.target.style.color = "#53424c";
        event.target.scrollIntoView({
            behavior: "smooth",
            inline: "center",
            block: "nearest"
        });

        selectedDay = event.target.dataset.date;
        updateTaskListForSelectedDay();
    }
});

// –Ø–∫—â–æ —î –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—å–æ–≥–æ –¥–Ω—è, –≤—ñ–¥—Ä–∞–∑—É –≤–∏–±–∏—Ä–∞—î–º–æ –π–æ–≥–æ
selectedDay = formatDate(today);

// –ü—ñ–¥—Å–≤—ñ—á—É—î–º–æ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ–π –¥–µ–Ω—å (–∞–±–æ –ø–µ—Ä—à–∏–π –¥–µ–Ω—å –∑ —Å–ø–∏—Å–∫—É)
let dayFound = false;
allDays.forEach(day => {
    if (day.dataset.date === selectedDay) {
        day.style.backgroundColor = "hsl(324, 87%, 80%)";
        day.style.color = "#53424c";
        day.scrollIntoView({
            behavior: "smooth",
            inline: "center",
            block: "nearest"
        });
        dayFound = true;
    } else {
        day.style.backgroundColor = "#53424c";
        day.style.color = "white";
    }
});

// –Ø–∫—â–æ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ–π –¥–µ–Ω—å –Ω–µ –∑–Ω–∞–π—à–æ–≤—Å—è –ø—ñ–¥—Å–≤—ñ—á—É—î–º–æ –ø–µ—Ä—à–∏–π –¥–µ–Ω—å
if (!dayFound && allDays.length > 0) {
    selectedDay = allDays[0].dataset.date;
    allDays[0].style.backgroundColor = "hsl(324, 87%, 80%)";
    allDays[0].style.color = "#53424c";
}

updateTaskListForSelectedDay();

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑–∞–≤–¥–∞–Ω—å
function updateTaskListForSelectedDay() {
    const taskList = document.getElementById("task-list");
    taskList.innerHTML = "";

    if (!selectedDay || !tasksByDay[selectedDay]) {
        return;
    }

    tasksByDay[selectedDay].forEach(taskText => {
        const li = document.createElement("li");
        li.classList.add("task-item");
        li.textContent = taskText;

        const deleteBtn = document.createElement("button");
        const img = document.createElement("img");
        deleteBtn.classList.add("delete-btn");
        img.classList.add("delete-icon");
        img.src = "sources/icons8-delete-button-40.png";
        img.alt = "–í–∏–¥–∞–ª–∏—Ç–∏";
        img.width = 30;
        img.height = 30;
        deleteBtn.appendChild(img);

        deleteBtn.addEventListener("click", () => {
            li.classList.add("delete-animation");
            setTimeout(() => {
                li.remove();
                // –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –∑—ñ —Å–ø–∏—Å–∫—É
                const index = tasksByDay[selectedDay].indexOf(taskText);
                if (index !== -1) {
                    tasksByDay[selectedDay].splice(index, 1);
                }
            }, 400);
        });

        li.appendChild(deleteBtn);
        taskList.appendChild(li);
    });
}

// –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ: –¥–æ–¥–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è
const modal = document.getElementById("modal");
const addBtn = document.getElementById("add-task-btn");
const taskForm = document.getElementById("task-form");

addBtn.addEventListener("click", function () {
    if (!selectedDay) {
        alert("–û–±–µ—Ä—ñ—Ç—å –¥–µ–Ω—å –ø–µ—Ä–µ–¥ —Ç–∏–º, —è–∫ –¥–æ–¥–∞–≤–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è.");
        return;
    }
    modal.classList.add("show");
});

window.addEventListener("click", function (event) {
    if (event.target === modal) {
        modal.classList.remove("show");
    }
});

taskForm.addEventListener("submit", function (event) {
    event.preventDefault();

    const taskInput = document.getElementById("task");
    const taskText = taskInput.value.trim();
    if (taskText === "") return;

    if (!tasksByDay[selectedDay]) {
        tasksByDay[selectedDay] = [];
    }
    tasksByDay[selectedDay].push(taskText);

    saveTasks();

    taskInput.value = "";
    modal.classList.remove("show");
    updateTaskListForSelectedDay();
});
